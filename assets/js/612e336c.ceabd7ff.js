"use strict";(self.webpackChunkosmosis_docs=self.webpackChunkosmosis_docs||[]).push([[7063],{3905:(e,t,n)=>{n.d(t,{Zo:()=>d,kt:()=>c});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},d=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},u=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(n),c=a,k=u["".concat(s,".").concat(c)]||u[c]||m[c]||i;return n?r.createElement(k,o(o({ref:t},d),{},{components:n})):r.createElement(k,o({ref:t},d))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=u;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}u.displayName="MDXCreateElement"},99027:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>m,frontMatter:()=>i,metadata:()=>l,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={},o="Mint",l={unversionedId:"modules/mint/README",id:"modules/mint/README",title:"Mint",description:"The mint module is responsible for creating tokens in a flexible way to reward",source:"@site/docs/osmosis-core/modules/mint/README.md",sourceDirName:"modules/mint",slug:"/modules/mint/",permalink:"/osmosis-core/modules/mint/",draft:!1,editUrl:"https://github.com/osmosis-labs/docs/tree/main/docs/osmosis-core/modules/mint/README.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Lockup",permalink:"/osmosis-core/modules/lockup/"},next:{title:"Pool Incentives",permalink:"/osmosis-core/modules/pool-incentives/"}},s={},p=[{value:"Contents",id:"contents",level:2},{value:"Concepts",id:"concepts",level:2},{value:"Reduction factor",id:"reduction-factor",level:3},{value:"State",id:"state",level:2},{value:"Minter",id:"minter",level:3},{value:"Params",id:"params",level:3},{value:"LastReductionEpoch",id:"lastreductionepoch",level:3},{value:"Begin-Epoch",id:"begin-epoch",level:2},{value:"NextEpochProvisions",id:"nextepochprovisions",level:3},{value:"EpochProvision",id:"epochprovision",level:3},{value:"Network Parameters",id:"network-parameters",level:2},{value:"Notes",id:"notes",level:3},{value:"Events",id:"events",level:2},{value:"End of Epoch",id:"end-of-epoch",level:3},{value:"Queries",id:"queries",level:2},{value:"params",id:"params-1",level:3},{value:"epoch-provisions",id:"epoch-provisions",level:3},{value:"Appendix",id:"appendix",level:2},{value:"Current Configuration",id:"current-configuration",level:3}],d={toc:p};function m(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"mint"},"Mint"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"mint")," module is responsible for creating tokens in a flexible way to reward\nvalidators, incentivize providing pool liquidity, provide funds for Osmosis governance,\nand pay developers to maintain and improve Osmosis."),(0,a.kt)("p",null,"The module is also responsible for reducing the token creation and distribution by a set period\nuntil it reaches its maximum supply (see ",(0,a.kt)("inlineCode",{parentName:"p"},"reduction_factor")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"reduction_period_in_epochs"),")"),(0,a.kt)("p",null,"The module uses time basis epochs supported by the ",(0,a.kt)("inlineCode",{parentName:"p"},"epochs")," module."),(0,a.kt)("h2",{id:"contents"},"Contents"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"#concepts"},"Concept"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"#state"},"State"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"#begin-epoch"},"Begin Epoch"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"#network-parameters"},"Parameters"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"#events"},"Events"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("a",{parentName:"strong",href:"#queries"},"Queries")))),(0,a.kt)("h2",{id:"concepts"},"Concepts"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"x/mint")," module is designed to handle the regular printing of new\ntokens within a chain. The design taken within Osmosis is to"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"Mint new tokens once per epoch (default one week)"),(0,a.kt)("li",{parentName:"ul"},"To have a \"Reductioning factor\" every period, which reduces the number of\nrewards per epoch. (default: period is 3 years, where a\nyear is 52 epochs. The next period's rewards are 2/3 of the prior\nperiod's rewards)")),(0,a.kt)("h3",{id:"reduction-factor"},"Reduction factor"),(0,a.kt)("p",null,"This is a generalization over the Bitcoin-style halvenings. Every year, the number\nof rewards issued per week will reduce by a governance-specified\nfactor, instead of a fixed ",(0,a.kt)("inlineCode",{parentName:"p"},"1/2"),". So\n",(0,a.kt)("inlineCode",{parentName:"p"},"RewardsPerEpochNextPeriod = ReductionFactor * CurrentRewardsPerEpoch)"),".\nWhen ",(0,a.kt)("inlineCode",{parentName:"p"},"ReductionFactor = 1/2"),", the Bitcoin halvenings are recreated. We\ndefault to having a reduction factor of ",(0,a.kt)("inlineCode",{parentName:"p"},"2/3")," and thus reduce rewards\nat the end of every year by ",(0,a.kt)("inlineCode",{parentName:"p"},"33%"),"."),(0,a.kt)("p",null,"The implication of this is that the total supply is finite, according to\nthe following formula:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Total Supply = InitialSupply + EpochsPerPeriod * { {InitialRewardsPerEpoch} / {1 - ReductionFactor} }")),(0,a.kt)("h2",{id:"state"},"State"),(0,a.kt)("h3",{id:"minter"},"Minter"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/osmosis-labs/osmosis/blob/cbb683e8395655042b4421355cd54a8c96bfa507/x/mint/types/mint.pb.go#L30"},(0,a.kt)("inlineCode",{parentName:"a"},"Minter"))," is an abstraction for holding current rewards information."),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-go"},"type Minter struct {\n    EpochProvisions sdk.Dec   // Rewards for the current epoch\n}\n")),(0,a.kt)("h3",{id:"params"},"Params"),(0,a.kt)("p",null,"Minting ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/osmosis-labs/osmosis/blob/cbb683e8395655042b4421355cd54a8c96bfa507/x/mint/types/mint.pb.go#L168"},(0,a.kt)("inlineCode",{parentName:"a"},"Params"))," are held in the global params store."),(0,a.kt)("h3",{id:"lastreductionepoch"},"LastReductionEpoch"),(0,a.kt)("p",null,"Last reduction epoch stores the epoch number when the last reduction of\ncoin mint amount per epoch has happened."),(0,a.kt)("h2",{id:"begin-epoch"},"Begin-Epoch"),(0,a.kt)("p",null,"Minting parameters are recalculated and inflation is paid at the beginning\nof each epoch. An epoch is signaled by x/epochs"),(0,a.kt)("h3",{id:"nextepochprovisions"},"NextEpochProvisions"),(0,a.kt)("p",null,"The target epoch provision is recalculated on each reduction period\n(default 3 years). At the time of the reduction, the current provision is\nmultiplied by the reduction factor (default ",(0,a.kt)("inlineCode",{parentName:"p"},"2/3"),"), to calculate the\nprovisions for the next epoch. Consequently, the rewards of the next\nperiod will be lowered by a ",(0,a.kt)("inlineCode",{parentName:"p"},"1")," - reduction factor."),(0,a.kt)("h3",{id:"epochprovision"},"EpochProvision"),(0,a.kt)("p",null,"Calculate the provisions generated for each epoch based on current epoch\nprovisions. The provisions are then minted by the ",(0,a.kt)("inlineCode",{parentName:"p"},"mint")," module's\n",(0,a.kt)("inlineCode",{parentName:"p"},"ModuleMinterAccount"),". These rewards are transferred to a\n",(0,a.kt)("inlineCode",{parentName:"p"},"FeeCollector"),", which handles distributing the rewards per the chain's needs.\nThis fee collector is specified as the ",(0,a.kt)("inlineCode",{parentName:"p"},"auth")," module's ",(0,a.kt)("inlineCode",{parentName:"p"},"FeeCollector")," ",(0,a.kt)("inlineCode",{parentName:"p"},"ModuleAccount"),"."),(0,a.kt)("h2",{id:"network-parameters"},"Network Parameters"),(0,a.kt)("p",null,"The minting module contains the following parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Example"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"mint_denom"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},'"uosmo"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"genesis_epoch_provisions"),(0,a.kt)("td",{parentName:"tr",align:null},"string (dec)"),(0,a.kt)("td",{parentName:"tr",align:null},'"500000000"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"epoch_identifier"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},'"weekly"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"reduction_period_in_epochs"),(0,a.kt)("td",{parentName:"tr",align:null},"int64"),(0,a.kt)("td",{parentName:"tr",align:null},"156")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"reduction_factor"),(0,a.kt)("td",{parentName:"tr",align:null},"string (dec)"),(0,a.kt)("td",{parentName:"tr",align:null},'"0.6666666666666"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"distribution_proportions.staking"),(0,a.kt)("td",{parentName:"tr",align:null},"string (dec)"),(0,a.kt)("td",{parentName:"tr",align:null},'"0.4"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"distribution_proportions.pool_incentives"),(0,a.kt)("td",{parentName:"tr",align:null},"string (dec)"),(0,a.kt)("td",{parentName:"tr",align:null},'"0.3"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"distribution_proportions.developer_rewards"),(0,a.kt)("td",{parentName:"tr",align:null},"string (dec)"),(0,a.kt)("td",{parentName:"tr",align:null},'"0.2"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"distribution_proportions.community_pool"),(0,a.kt)("td",{parentName:"tr",align:null},"string (dec)"),(0,a.kt)("td",{parentName:"tr",align:null},'"0.1"')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"weighted_developer_rewards_receivers"),(0,a.kt)("td",{parentName:"tr",align:null},"array"),(0,a.kt)("td",{parentName:"tr",align:null},'[{"address": "osmoxx", "weight": "1"}]')),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"minting_rewards_distribution_start_epoch"),(0,a.kt)("td",{parentName:"tr",align:null},"int64"),(0,a.kt)("td",{parentName:"tr",align:null},"10")))),(0,a.kt)("p",null,"Below are all the network parameters for the ",(0,a.kt)("inlineCode",{parentName:"p"},"mint")," module:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"mint_denom"))," - Token type being minted"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"genesis_epoch_provisions"))," - Amount of tokens generated at the epoch to the distribution categories (see distribution_proportions)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"epoch_identifier"))," - Type of epoch that triggers token issuance (day, week, etc.)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"reduction_period_in_epochs"))," - How many epochs must occur before implementing the reduction factor"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"reduction_factor"))," - What the total token issuance factor will reduce by after the reduction period passes (if set to 66.66%, token issuance will reduce by 1/3)"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"distribution_proportions"))," - Categories in which the specified proportion of newly released tokens are distributed to",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"staking"))," - Proportion of minted funds to incentivize staking OSMO"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"pool_incentives"))," - Proportion of minted funds to incentivize pools on Osmosis"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"developer_rewards"))," - Proportion of minted funds to pay developers for their past and future work"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"community_pool"))," - Proportion of minted funds to be set aside for the community pool"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"weighted_developer_rewards_receivers"))," - Addresses that developer rewards will go to. The weight attached to an address is the percent of the developer rewards that the specific address will receive"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("inlineCode",{parentName:"strong"},"minting_rewards_distribution_start_epoch"))," - What epoch will start the rewards distribution to the aforementioned distribution categories")),(0,a.kt)("h3",{id:"notes"},"Notes"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"mint_denom")," defines denom for minting token - uosmo"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"genesis_epoch_provisions")," provides minting tokens per epoch at genesis."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"epoch_identifier"),' defines the epoch identifier to be used for the mint module e.g. "weekly"'),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"reduction_period_in_epochs")," defines the number of epochs to pass to reduce the mint amount"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"reduction_factor")," defines the reduction factor of tokens at every ",(0,a.kt)("inlineCode",{parentName:"li"},"reduction_period_in_epochs")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"distribution_proportions")," defines distribution rules for minted tokens, when the developer\nrewards address is empty, it distributes tokens to the community pool."),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"weighted_developer_rewards_receivers")," provides the addresses that receive developer\nrewards by weight"),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("inlineCode",{parentName:"li"},"minting_rewards_distribution_start_epoch")," defines the start epoch of minting to make sure\nminting start after initial pools are set")),(0,a.kt)("h2",{id:"events"},"Events"),(0,a.kt)("p",null,"The minting module emits the following events:"),(0,a.kt)("h3",{id:"end-of-epoch"},"End of Epoch"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Type"),(0,a.kt)("th",{parentName:"tr",align:null},"Attribute Key"),(0,a.kt)("th",{parentName:"tr",align:null},"Attribute Value"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"mint"),(0,a.kt)("td",{parentName:"tr",align:null},"epoch_number"),(0,a.kt)("td",{parentName:"tr",align:null},"{epochNumber}")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"mint"),(0,a.kt)("td",{parentName:"tr",align:null},"epoch_provisions"),(0,a.kt)("td",{parentName:"tr",align:null},"{epochProvisions}")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"mint"),(0,a.kt)("td",{parentName:"tr",align:null},"amount"),(0,a.kt)("td",{parentName:"tr",align:null},"{amount}")))),(0,a.kt)("h2",{id:"queries"},"Queries"),(0,a.kt)("h3",{id:"params-1"},"params"),(0,a.kt)("p",null,"Query all the current mint parameter values"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"query mint params\n")),(0,a.kt)("p",null,"::: details Example"),(0,a.kt)("p",null,"List all current min parameters in json format by:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"osmosisd query mint params -o json | jq\n")),(0,a.kt)("p",null,"An example of the output:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "mint_denom": "uosmo",\n  "genesis_epoch_provisions": "821917808219.178082191780821917",\n  "epoch_identifier": "day",\n  "reduction_period_in_epochs": "365",\n  "reduction_factor": "0.666666666666666666",\n  "distribution_proportions": {\n    "staking": "0.250000000000000000",\n    "pool_incentives": "0.450000000000000000",\n    "developer_rewards": "0.250000000000000000",\n    "community_pool": "0.050000000000000000"\n  },\n  "weighted_developer_rewards_receivers": [\n    {\n      "address": "osmo14kjcwdwcqsujkdt8n5qwpd8x8ty2rys5rjrdjj",\n      "weight": "0.288700000000000000"\n    },\n    {\n      "address": "osmo1gw445ta0aqn26suz2rg3tkqfpxnq2hs224d7gq",\n      "weight": "0.229000000000000000"\n    },\n    {\n      "address": "osmo13lt0hzc6u3htsk7z5rs6vuurmgg4hh2ecgxqkf",\n      "weight": "0.162500000000000000"\n    },\n    {\n      "address": "osmo1kvc3he93ygc0us3ycslwlv2gdqry4ta73vk9hu",\n      "weight": "0.109000000000000000"\n    },\n    {\n      "address": "osmo19qgldlsk7hdv3ddtwwpvzff30pxqe9phq9evxf",\n      "weight": "0.099500000000000000"\n    },\n    {\n      "address": "osmo19fs55cx4594een7qr8tglrjtt5h9jrxg458htd",\n      "weight": "0.060000000000000000"\n    },\n    {\n      "address": "osmo1ssp6px3fs3kwreles3ft6c07mfvj89a544yj9k",\n      "weight": "0.015000000000000000"\n    },\n    {\n      "address": "osmo1c5yu8498yzqte9cmfv5zcgtl07lhpjrj0skqdx",\n      "weight": "0.010000000000000000"\n    },\n    {\n      "address": "osmo1yhj3r9t9vw7qgeg22cehfzj7enwgklw5k5v7lj",\n      "weight": "0.007500000000000000"\n    },\n    {\n      "address": "osmo18nzmtyn5vy5y45dmcdnta8askldyvehx66lqgm",\n      "weight": "0.007000000000000000"\n    },\n    {\n      "address": "osmo1z2x9z58cg96ujvhvu6ga07yv9edq2mvkxpgwmc",\n      "weight": "0.005000000000000000"\n    },\n    {\n      "address": "osmo1tvf3373skua8e6480eyy38avv8mw3hnt8jcxg9",\n      "weight": "0.002500000000000000"\n    },\n    {\n      "address": "osmo1zs0txy03pv5crj2rvty8wemd3zhrka2ne8u05n",\n      "weight": "0.002500000000000000"\n    },\n    {\n      "address": "osmo1djgf9p53n7m5a55hcn6gg0cm5mue4r5g3fadee",\n      "weight": "0.001000000000000000"\n    },\n    {\n      "address": "osmo1488zldkrn8xcjh3z40v2mexq7d088qkna8ceze",\n      "weight": "0.000800000000000000"\n    }\n  ],\n  "minting_rewards_distribution_start_epoch": "1"\n}\n')),(0,a.kt)("p",null,":::"),(0,a.kt)("h3",{id:"epoch-provisions"},"epoch-provisions"),(0,a.kt)("p",null,"Query the current epoch provisions"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-sh"},"query mint epoch-provisions\n")),(0,a.kt)("p",null,"::: details Example"),(0,a.kt)("p",null,"List the current epoch provisions:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"osmosisd query mint epoch-provisions\n")),(0,a.kt)("p",null,"As of this writing, this number will be equal to the ",(0,a.kt)("inlineCode",{parentName:"p"},"genesis-epoch-provisions"),". Once the ",(0,a.kt)("inlineCode",{parentName:"p"},"reduction_period_in_epochs")," is reached, the ",(0,a.kt)("inlineCode",{parentName:"p"},"reduction_factor")," will be initiated and reduce the amount of OSMO minted per epoch.\n:::"),(0,a.kt)("h2",{id:"appendix"},"Appendix"),(0,a.kt)("h3",{id:"current-configuration"},"Current Configuration"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"mint")," ",(0,a.kt)("strong",{parentName:"p"},"module: Network Parameter effects and current configuration")),(0,a.kt)("p",null,"The following tables show overall effects on different configurations of the ",(0,a.kt)("inlineCode",{parentName:"p"},"mint")," related network parameters:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"mint_denom"),(0,a.kt)("th",{parentName:"tr",align:null},"epoch_provisions"),(0,a.kt)("th",{parentName:"tr",align:null},"epoch_identifier"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Type"),(0,a.kt)("td",{parentName:"tr",align:null},"string"),(0,a.kt)("td",{parentName:"tr",align:null},"string (dec)")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Higher"),(0,a.kt)("td",{parentName:"tr",align:null},"N/A"),(0,a.kt)("td",{parentName:"tr",align:null},"Higher inflation rate")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Lower"),(0,a.kt)("td",{parentName:"tr",align:null},"N/A"),(0,a.kt)("td",{parentName:"tr",align:null},"Lower inflation rate")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Constraints"),(0,a.kt)("td",{parentName:"tr",align:null},"N/A"),(0,a.kt)("td",{parentName:"tr",align:null},"Value has to be a positive integer")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Current configuration"),(0,a.kt)("td",{parentName:"tr",align:null},"uosmo"),(0,a.kt)("td",{parentName:"tr",align:null},"821917808219.178 (821,9178 OSMO)")))))}m.isMDXComponent=!0}}]);