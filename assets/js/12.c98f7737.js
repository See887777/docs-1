(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{367:function(s,t,a){s.exports=a.p+"assets/img/local-installer.72430dd8.png"},368:function(s,t,a){s.exports=a.p+"assets/img/localOsmosis.707fc627.png"},476:function(s,t,a){"use strict";a.r(t);var e=a(8),n=Object(e.a)({},(function(){var s=this,t=s.$createElement,e=s._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"cosmwasm-localosmosis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#cosmwasm-localosmosis"}},[s._v("#")]),s._v(" CosmWasm & LocalOsmosis")]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("You can now deploy contracts to LocalOsmosis with "),e("a",{attrs:{href:"https://github.com/osmosis-labs/beaker",target:"_blank",rel:"noopener noreferrer"}},[s._v("Beaker"),e("OutboundLink")],1),s._v(". The official tooling to deploy Osmosis Smartcontracts.")])]),s._v(" "),e("p",[s._v("The following is detailed guide that shows the basics of manually deploying a contract to a Osmosis local environment. It covers:")]),s._v(" "),e("ul",[e("li",[s._v("Initial Setup\n"),e("ul",[e("li",[s._v("Rust")]),s._v(" "),e("li",[s._v("LocalOsmosis via Osmosis installer.\n"),e("ul",[e("li",[s._v("osmosisd binary automatically configured to connect to your localOsmosis")]),s._v(" "),e("li",[s._v("localOsmosis setup in the $HOME directory (~/localosmosis)")])])])])]),s._v(" "),e("li",[s._v("Deploy a smart contract\n"),e("ul",[e("li",[s._v("Clone a base template contract")]),s._v(" "),e("li",[s._v("Compile contract")]),s._v(" "),e("li",[s._v("Optimize  contract")]),s._v(" "),e("li",[s._v("Create local key")]),s._v(" "),e("li",[s._v("Store contract")]),s._v(" "),e("li",[s._v("Initialize")]),s._v(" "),e("li",[s._v("Get contract address")]),s._v(" "),e("li",[s._v("Query contract")]),s._v(" "),e("li",[s._v("Increment contract's count")]),s._v(" "),e("li",[s._v("Reset contracts count")]),s._v(" "),e("li",[s._v("Get contract's state")]),s._v(" "),e("li",[s._v("Query contract info")]),s._v(" "),e("li",[s._v("List all contracts")])])])]),s._v(" "),e("h2",{attrs:{id:"initial-setup"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#initial-setup"}},[s._v("#")]),s._v(" Initial setup")]),s._v(" "),e("p",[s._v("This tutorial uses a Osmosis specific development tools to deploy contracts to your local Osmosis environment powered by localOsmosis.")]),s._v(" "),e("h3",{attrs:{id:"set-up-rust"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#set-up-rust"}},[s._v("#")]),s._v(" Set up Rust")]),s._v(" "),e("p",[s._v("Rust is the main programming language used for CosmWasm smart contracts. While WASM smart contracts can theoretically be written in any programming language, CosmWasm libraries and tooling work best with Rust.")]),s._v(" "),e("p",[s._v("First, install the latest version of "),e("a",{attrs:{href:"https://www.rust-lang.org/tools/install",target:"_blank",rel:"noopener noreferrer"}},[s._v("Rust"),e("OutboundLink")],1),s._v(".")]),s._v(" "),e("p",[s._v("Then run the following commands:")]),s._v(" "),e("div",{staticClass:"language-sh line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-sh"}},[e("code",[e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 1. Set 'stable' as the default release channel:")]),s._v("\n\nrustup default stable\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 2. Add WASM as the compilation target:")]),s._v("\n\nrustup target "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("add")]),s._v(" wasm32-unknown-unknown\n\n"),e("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 3. Install the following packages to generate the contract:")]),s._v("\n\ncargo "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" cargo-generate --features vendored-openssl\ncargo "),e("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" cargo-run-script\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br")])]),e("h3",{attrs:{id:"setup-localosmosis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#setup-localosmosis"}},[s._v("#")]),s._v(" Setup  LocalOsmosis")]),s._v(" "),e("p",[s._v("The easiest way to setup your localOsmosis is by downloading the "),e("a",{attrs:{href:"https://get.osmosis.zone/",target:"_blank",rel:"noopener noreferrer"}},[s._v("automated installer"),e("OutboundLink")],1),s._v(". You can learn more about localOsmosis by reading the "),e("a",{attrs:{href:"https://github.com/osmosis-labs/localosmosis",target:"_blank",rel:"noopener noreferrer"}},[s._v("README"),e("OutboundLink")],1),s._v(" in the official repo.")]),s._v(" "),e("p",[s._v("Run the following and choose option #3.")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("curl -sL https://get.osmosis.zone/install > i.py && python3 i.py\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[e("img",{attrs:{src:a(367),alt:""}})]),s._v(" "),e("h4",{attrs:{id:"start-localosmosis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#start-localosmosis"}},[s._v("#")]),s._v(" Start localOsmosis")]),s._v(" "),e("p",[s._v("Inside a separate bash window start your localOsmosis which was installed in ~/localosmosis")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("cd ~/localosmosis\ndocker-compose up\n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("You will start seeing LocalOsmosis block activity in your terminal. Keep LocalOsmosis running while you perform the next steps in a new terminal window.")]),s._v(" "),e("p",[e("img",{attrs:{src:a(368),alt:""}})]),s._v(" "),e("div",{staticClass:"custom-block tip"},[e("p",{staticClass:"custom-block-title"},[s._v("TIP")]),s._v(" "),e("p",[s._v("To view the LocalOsmosis wallet information, visit the "),e("RouterLink",{attrs:{to:"/developing/dapps/get_started/[developing/tools/localosmosis.html#accounts](https://github.com/osmosis-labs/localosmosis#accounts)"}},[s._v("LocalOsmosis accounts page")]),s._v(".")],1)]),s._v(" "),e("h2",{attrs:{id:"deploy-a-smart-contract"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#deploy-a-smart-contract"}},[s._v("#")]),s._v(" Deploy a smart contract")]),s._v(" "),e("h3",{attrs:{id:"clone-cw-tpl-osmosis"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#clone-cw-tpl-osmosis"}},[s._v("#")]),s._v(" Clone cw-tpl-osmosis")]),s._v(" "),e("p",[s._v("For this example we will use the cw-tpl-osmosis (CosmWasm Template Osmosis) repo that was created with the "),e("a",{attrs:{href:"https://github.com/InterWasm/cw-template",target:"_blank",rel:"noopener noreferrer"}},[s._v("cw-template"),e("OutboundLink")],1),s._v(" repo.")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("git clone https://github.com/osmosis-labs/cw-tpl-osmosis\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"compile-the-wasm-contract-with-stable-toolchain"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#compile-the-wasm-contract-with-stable-toolchain"}},[s._v("#")]),s._v(" Compile the wasm contract with stable toolchain")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("rustup default stable\ncargo wasm\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("After this compiles, it should produce a file in "),e("code",[s._v("target/wasm32-unknown-unknown/release/cw_tpl_osmosis.wasm.")]),s._v(" A quick ls -lh should show around 1.8MB. This is a release build, but not stripped of all unneeded code. To produce a much smaller version, you can run this which tells the compiler to strip all unused code out:")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("RUSTFLAGS='-C link-arg=-s' \ncargo wasm \n\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("This produces a file about 149kB. We will do further optimisation below.")]),s._v(" "),e("h3",{attrs:{id:"optimized-compilation"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#optimized-compilation"}},[s._v("#")]),s._v(" Optimized Compilation")]),s._v(" "),e("p",[s._v("To reduce gas costs, the binary size should be as small as possible. This will result in a less costly deployment, and lower fees on every interaction. Luckily, there is tooling to help with this. You can optimize production code using rust-optimizer. rust-optimizer produces reproducible builds of CosmWasm smart contracts. This means third parties can verify the contract is actually the claimed code.")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('sudo docker run --rm -v "$(pwd)":/code \\\n    --mount type=volume,source="$(basename "$(pwd)")_cache",target=/code/target \\\n    --mount type=volume,source=registry_cache,target=/usr/local/cargo/registry \\\n    cosmwasm/rust-optimizer:0.12.6\n \n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br")])]),e("p",[s._v("Binary will be at artifacts/osmosis_cw_tpl.wasm folder and its size will be 138k")]),s._v(" "),e("h3",{attrs:{id:"created-a-local-key"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#created-a-local-key"}},[s._v("#")]),s._v(" Created a local key")]),s._v(" "),e("p",[s._v("Create a key using one of the seeds provided in localOsmosis.")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("osmosisd keys add <unsafe-test-key-name> --recover\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("Example test1 key from "),e("a",{attrs:{href:"https://github.com/osmosis-labs/localosmosis#accounts",target:"_blank",rel:"noopener noreferrer"}},[s._v("here"),e("OutboundLink")],1),s._v(":")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("notice oak worry limit wrap speak medal online prefer cluster roof addict wrist behave treat actual wasp year salad speed social layer crew genius\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"store-to-your-localosmosis-chain"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#store-to-your-localosmosis-chain"}},[s._v("#")]),s._v(" Store to your localOsmosis chain")]),s._v(" "),e("p",[s._v("You can deploy the contract to localOsmosis or a testnet.  In this example we will deploy to localOsmosis.")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("cd artifacts\nosmosisd tx wasm store cw_tpl_osmosis.wasm  --from <unsafe-test-key-name> --chain-id=<chain-id> --gas-prices 0.1uosmo --gas auto --gas-adjustment 1.3 -b block -y\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[e("code",[s._v("<unsafe-test-key-name>")]),s._v(" = Name of your local key.\n"),e("code",[s._v("<chain-id>")]),s._v(" = localosmosis")]),s._v(" "),e("p",[s._v("Replace "),e("code",[s._v("<unsafe-test-key-name>")]),s._v(" with the key name from your local keys. "),e("code",[s._v("osmosisd keys list")]),s._v("\nReplace "),e("code",[s._v("<chain-id>")]),s._v(" with localosmosis or osmo-test-4.\nSave the CODE_ID from the output of the command above as a local variable "),e("code",[s._v("CODE_ID=XX")])]),s._v(" "),e("h3",{attrs:{id:"or-store-code-id"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#or-store-code-id"}},[s._v("#")]),s._v(" Or Store CODE_ID")]),s._v(" "),e("p",[s._v("Instead of looking for the code_id the command above, you can also run the following command to set the CODE_ID as a variable.")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("TX=$(osmosisd tx wasm store cw_tpl_osmosis.wasm  --from <unsafe-test-key-name> --chain-id=<chain-id> --gas-prices 0.1uosmo --gas auto --gas-adjustment 1.3 -b block --output json -y | jq -r '.txhash')\nCODE_ID=$(osmosisd query tx $TX --output json | jq -r '.logs[0].events[-1].attributes[0].value')\necho \"Your contract code_id is $CODE_ID\"\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br")])]),e("p",[s._v("If this is a brand new localOsmosis instance it should be "),e("code",[s._v("1")])]),s._v(" "),e("h3",{attrs:{id:"instantiate-the-contract"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#instantiate-the-contract"}},[s._v("#")]),s._v(" Instantiate the contract")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('INITIAL_STATE=\'{"count":100}\'\nosmosisd tx wasm instantiate $CODE_ID $INITIAL_STATE --amount 50000uosmo  --label "Counter Contract" --from <unsafe-test-key-name> --chain-id <chain-id> --gas-prices 0.1uosmo --gas auto --gas-adjustment 1.3 -b block -y --no-admin\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("p",[s._v("Example")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('INITIAL_STATE=\'{"count":100}\'\nosmosisd tx wasm instantiate $CODE_ID $INITIAL_STATE --amount 50000uosmo  --label "Counter Contract" --from c1 --chain-id localosmosis --gas-prices 0.1uosmo --gas auto --gas-adjustment 1.3 -b block -y --no-admin\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"get-contract-address"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-contract-address"}},[s._v("#")]),s._v(" Get contract address")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("CONTRACT_ADDR=$(osmosisd query wasm list-contract-by-code $CODE_ID --output json | jq -r '.contracts[0]')\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h2",{attrs:{id:"query-contract"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#query-contract"}},[s._v("#")]),s._v(" Query Contract")]),s._v(" "),e("h3",{attrs:{id:"increment-contract-s-count"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#increment-contract-s-count"}},[s._v("#")]),s._v(" Increment contract's count")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('INCREMENT_MSG=\'{"increment":{}}\'\nosmosisd tx wasm execute $CONTRACT_ADDR "$INCREMENT_MSG" --from c1\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"reset-contracts-count"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#reset-contracts-count"}},[s._v("#")]),s._v(" Reset contracts count")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('RESET_MSG=\'{"reset":{"count":0}}\'\nosmosisd tx wasm execute $CONTRACT_ADDR "$RESET_MSG" --from c1\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"get-contract-s-state"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#get-contract-s-state"}},[s._v("#")]),s._v(" Get contract's state")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v('GET_STATE_MSG=\'{"get_count":{}}\'\nosmosisd query wasm contract-state smart  $CONTRACT_ADDR "$GET_STATE_MSG"\n')])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br")])]),e("h3",{attrs:{id:"query-contract-info"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#query-contract-info"}},[s._v("#")]),s._v(" Query contract info")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("osmosisd query wasm contract $CONTRACT_ADDR\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("h3",{attrs:{id:"list-all-contracts"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#list-all-contracts"}},[s._v("#")]),s._v(" List all contracts")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("osmosisd query wasm list-code\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br")])]),e("p",[s._v("Good job! It's not time to learn how to actually develop contracts.  You can now visit the "),e("a",{attrs:{href:"https://docs.cosmwasm.com/docs/1.0/getting-started/intro",target:"_blank",rel:"noopener noreferrer"}},[s._v("official CosmWasm contracts"),e("OutboundLink")],1),s._v(" and as you explore the docs you will understand how tio actually interact with the Osmosis Blockchain.")])])}),[],!1,null,null,null);t.default=n.exports}}]);