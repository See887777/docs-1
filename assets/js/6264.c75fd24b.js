"use strict";(self.webpackChunkosmosis_docs=self.webpackChunkosmosis_docs||[]).push([[6264],{86264:(t,e,i)=>{i.r(e),i.d(e,{dyte_recording_indicator:()=>r});var n=i(94196),a=i(7147),s=i(61070);i(55752);const r=class{constructor(t){(0,n.r)(this,t),this.t=(0,s.u)(),this.iconPack=a.d,this.setIsRecording=t=>{this.isRecording="RECORDING"===t}}connectedCallback(){this.meetingChanged(this.meeting)}disconnectedCallback(){var t;null===(t=this.meeting)||void 0===t||t.recording.removeListener("recordingUpdate",this.updateRecordingStatus)}meetingChanged(t){null!=t&&(this.setIsRecording(t.recording.recordingState),this.updateRecordingStatus=t=>{this.setIsRecording(t)},t.recording.addListener("recordingUpdate",this.updateRecordingStatus))}render(){return(0,n.h)(n.H,null,this.isRecording&&(0,n.h)("div",{class:"indicator","aria-label":this.t("This meeting is being recorded"),part:"indicator"},(0,n.h)("dyte-icon",{icon:this.iconPack.recording,"aria-hidden":!0,tabIndex:-1,part:"icon"}),(0,n.h)("span",null,this.t("REC"))))}static get watchers(){return{meeting:["meetingChanged"]}}};r.style=":host{margin-left:var(--dyte-space-2, 8px);margin-right:var(--dyte-space-2, 8px);display:block;font-family:var(--dyte-font-family, sans-serif)}:host[size='sm']{margin-left:var(--dyte-space-1, 4px);margin-right:var(--dyte-space-1, 4px)}.indicator{display:flex;flex-direction:row;align-items:center;font-size:14px;--tw-text-opacity:1;color:rgba(var(--dyte-colors-danger, 255 45 45) / var(--tw-text-opacity))}dyte-icon{margin-right:var(--dyte-space-1, 4px);height:var(--dyte-space-5, 20px);width:var(--dyte-space-5, 20px);-webkit-animation:blink 4s linear infinite;animation:blink 4s linear infinite}:host([size='sm']) dyte-icon{height:var(--dyte-space-4, 16px);width:var(--dyte-space-4, 16px)}:host([size='sm']) .indicator span{display:none}@-webkit-keyframes blink{0%,10%{opacity:0}11%,100%{opacity:1}}@keyframes blink{0%,10%{opacity:0}11%,100%{opacity:1}}"},61070:(t,e,i)=>{i.d(e,{g:()=>a,u:()=>s});var n=i(55752);const a=async t=>{if(null==t||"en"===t||""===t.trim())return n.d;try{const e=await fetch(`http://localhost:5000/${t}.json`);return e.ok?Object.assign({},n.d,await e.json()):n.d}catch(e){return n.d}},s=(t=n.d)=>e=>{var i;return null!==(i=t[e])&&void 0!==i?i:e}}}]);