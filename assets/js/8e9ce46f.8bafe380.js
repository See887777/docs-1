"use strict";(self.webpackChunkosmosis_docs=self.webpackChunkosmosis_docs||[]).push([[273],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>m});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),p=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),m=a,g=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},56716:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var r=n(87462),a=(n(67294),n(3905));const i={title:"Rest Endpoints",sidebar_position:4},o=void 0,s={unversionedId:"interact-rest",id:"interact-rest",title:"Rest Endpoints",description:"Using the REST Endpoints",source:"@site/docs/apis/interact-rest.mdx",sourceDirName:".",slug:"/interact-rest",permalink:"/apis/interact-rest",draft:!1,editUrl:"https://github.com/osmosis-labs/docs/tree/main/docs/apis/interact-rest.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Rest Endpoints",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Interacting with RPC endpoints",permalink:"/apis/rpc/interact-rpc"},next:{title:"Javascript",permalink:"/apis/interact-javascript"}},l={},p=[{value:"Using the REST Endpoints",id:"using-the-rest-endpoints",level:2},{value:"Query for historical state using REST",id:"query-for-historical-state-using-rest",level:3},{value:"Cross-Origin Resource Sharing (CORS)",id:"cross-origin-resource-sharing-cors",level:3},{value:"Setting up a public rest server",id:"setting-up-a-public-rest-server",level:3},{value:"Signing transactions",id:"signing-transactions",level:3}],c={toc:p};function u(e){let{components:t,...n}=e;return(0,a.kt)("wrapper",(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h2",{id:"using-the-rest-endpoints"},"Using the REST Endpoints"),(0,a.kt)("p",null,"All gRPC services on the Cosmos SDK  and Osmosis are made available for more convenient REST-based queries through gRPC-gateway. The format of the URL path is based on the Protobuf service method's full-qualified name, but may contain small customizations so that final URLs look more idiomatic. For example, the REST endpoint for the ",(0,a.kt)("inlineCode",{parentName:"p"},"cosmos.bank.v1beta1.Query/AllBalances")," method is ",(0,a.kt)("inlineCode",{parentName:"p"},"GET /cosmos/bank/v1beta1/balances/{address}"),". Request arguments are passed as query parameters."),(0,a.kt)("p",null,"As a concrete example, the ",(0,a.kt)("inlineCode",{parentName:"p"},"curl")," command to make balances request is:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n    -X GET \\\n    -H "Content-Type: application/json" \\\n    https://lcd.osmosis.zone/cosmos/bank/v1beta1/balances/$MY_ADDRESS\n')),(0,a.kt)("p",null,"Make sure to replace ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost:1317")," with the REST endpoint of your node, configured under the ",(0,a.kt)("inlineCode",{parentName:"p"},"api.address")," field."),(0,a.kt)("p",null,"The list of all available REST endpoints is available as a Swagger specification file, it can be viewed at ",(0,a.kt)("inlineCode",{parentName:"p"},"localhost:1317/swagger"),". Make sure that the ",(0,a.kt)("inlineCode",{parentName:"p"},"api.swagger")," field is set to true in your ",(0,a.kt)("a",{parentName:"p",href:"../run-node/run-node.md#configuring-the-node-using-apptoml"},(0,a.kt)("inlineCode",{parentName:"a"},"app.toml"))," file."),(0,a.kt)("h3",{id:"query-for-historical-state-using-rest"},"Query for historical state using REST"),(0,a.kt)("p",null,"Querying for historical state is done using the HTTP header ",(0,a.kt)("inlineCode",{parentName:"p"},"x-cosmos-block-height"),". For example, a curl command would look like:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},'curl \\\n    -X GET \\\n    -H "Content-Type: application/json" \\\n    -H "x-cosmos-block-height: 279256"\n    http://localhost:1317/cosmos/bank/v1beta1/balances/$MY_VALIDATOR\n')),(0,a.kt)("p",null,"Assuming the state at that block has not yet been pruned by the node, this query should return a non-empty response."),(0,a.kt)("h3",{id:"cross-origin-resource-sharing-cors"},"Cross-Origin Resource Sharing (CORS)"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/en-US/docs/Web/HTTP/CORS"},"CORS policies")," are not enabled by default to help with security. "),(0,a.kt)("h3",{id:"setting-up-a-public-rest-server"},"Setting up a public rest server"),(0,a.kt)("p",null,"If you would like to use the rest-server in a public environment we recommend you provide a reverse proxy. We can share our Terraform infrastructurefor setting up rest servers in DigitalOcean. We will write a guide soon and publish a repo soon. In the meantime feel free to reachout in Discord. s"),(0,a.kt)("p",null,"For testing and development purposes there is an ",(0,a.kt)("inlineCode",{parentName:"p"},"enabled-unsafe-cors")," field inside ",(0,a.kt)("a",{parentName:"p",href:"../run-node/run-node.md#configuring-the-node-using-apptoml"},(0,a.kt)("inlineCode",{parentName:"a"},"app.toml")),"."),(0,a.kt)("h3",{id:"signing-transactions"},"Signing transactions"),(0,a.kt)("p",null,"Sending transactions using gRPC and REST requires some additional steps: generating the transaction, signing it, and finally broadcasting it. Read about ",(0,a.kt)("a",{parentName:"p",href:"https://docs.cosmos.network/v0.46/run-node/txs.html"},"generating and signing transactions"),"."))}u.isMDXComponent=!0}}]);